name: AI-Enhanced Screenshot Job Hunter (NVIDIA & Intel)

on:
  schedule:
    # Single schedule: Every 30 minutes
    - cron: '0,30 * * * *'    # Run at :00 and :30 of each hour
    
  workflow_dispatch: # Allow manual trigger from GitHub Actions tab

permissions:
  contents: write  # Allow pushing commits back to repository

jobs:
  hunt-jobs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Setup Chrome for Screenshots
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
      continue-on-error: true
        
    - name: Install Chrome (fallback method)
      if: failure()
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libgbm1 \
          libxss1 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 || echo "Some dependencies failed, continuing..."
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r screenshot-version/requirements.txt
        
    - name: Restore previous state from cache
      uses: actions/cache/restore@v4
      with:
        path: |
          screenshot-version/screenshot_jobs_state.json
          screenshot-version/nvidia_screenshot.txt
          screenshot-version/intel_screenshot.txt
        key: screenshot-job-hunter-state-latest
        restore-keys: |
          screenshot-job-hunter-state-latest
          screenshot-job-hunter-state-
          multi-job-hunter-state-
        
    - name: Debug cache files before run
      run: |
        echo "=== Cache Debug Info ==="
        echo "Working directory: $(pwd)"
        echo "Contents of repository root:"
        ls -la
        echo "Contents of screenshot-version:"
        ls -la screenshot-version/ || echo "screenshot-version directory not found"
        echo "Checking for screenshot files:"
        find . -name "*screenshot*.txt" -o -name "*screenshot*.json" | head -10
        
    - name: Run AI-Enhanced Screenshot Job Hunter
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        USE_AI_ANALYSIS: ${{ vars.USE_AI_ANALYSIS || 'true' }}
        CHANGE_THRESHOLD: ${{ vars.CHANGE_THRESHOLD || '0.5' }}
        SAVE_DEBUG_IMAGES: ${{ vars.SAVE_DEBUG_IMAGES || 'false' }}
      run: |
        cd screenshot-version
        python jobHunt_screenshot.py
        
    - name: Debug cache files after run
      if: always()
      run: |
        echo "=== Files created after run ==="
        echo "Contents of screenshot-version:"
        ls -la screenshot-version/ || echo "screenshot-version directory not found"
        echo "Screenshot files:"
        find screenshot-version/ -name "*screenshot*.txt" -exec wc -l {} \; 2>/dev/null || echo "No screenshot files found"
        echo "State file:"
        cat screenshot-version/screenshot_jobs_state.json 2>/dev/null || echo "No state file found"
      
    - name: Save state to cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: |
          screenshot-version/screenshot_jobs_state.json
          screenshot-version/nvidia_screenshot.txt
          screenshot-version/intel_screenshot.txt
        key: screenshot-job-hunter-state-latest
        
    - name: Upload debug files as artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: screenshot-job-hunter-debug-${{ github.run_number }}
        path: |
          screenshot-version/*.log
          screenshot-version/screenshot_jobs_state.json
          screenshot-version/debug_*.png
          screenshot-version/*.txt
        retention-days: 7
        if-no-files-found: ignore